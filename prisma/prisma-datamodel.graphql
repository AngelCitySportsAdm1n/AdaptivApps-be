type Profile @key(fields: "email") {
  id: ID! @id
  email: String! @unique
  type: String
  private: Boolean @default(value: true)
  firstName: String
  lastName: String
  phoneNumber: String
  displayName: String
  state: String
  city: String
  bio: String
  legal: Boolean @default(value: false)
  events: [Participant]! @relation(name: "Event")
  activities: [Participant]! @relation(name: "Profile")
  extProfile: ExtendedProfile @relation(name: "ExtendedProfile")
  demographicProfile: DemographicProfile @relation(name: "DemographicProfile")
  chats: [Chat] @relation(name: "SentMessages", onDelete: CASCADE)
  receivedChats: [Chat] @relation(name: "ReceivedMessages", onDelete: CASCADE)
  chatRooms: [ChatRoom] @relation(name: "ChatRooms", onDelete: CASCADE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

type ExtendedProfile {
  id: ID! @id
  private: Boolean @default(value: true)
  website: String
  orgName: String
  disability: Disability @relation(name: "Disability")
  gender: String
  birthday: String
  eC1Name: String
  eC1Relation: String
  eC1Phone: String
  mobilityStatus: String
}

type DemographicProfile {
  id: ID! @id
  private: Boolean @default(value: true)
  adaptivSportsParticipation: Boolean @default(value: false)
  acsParticipation: Boolean @default(value: false)
  sportsParticipation: AdaptivSportsOptions
    @relation(name: "AdaptivSportOptions")
  notParticipating: String
  angelCityParticipation: String
  angelCityGameYears: String
  veteranStatus: Boolean
  militaryBranch: String
  yearsServed: String
  ethnicity: String
  householdIncome: String
  employment: Boolean
  favProAthletes: String
  favCelebs: String
  becomeAthleteMentor: Boolean
  athleteMentorHelp: Boolean
  athleteMentorSport: AdaptivSportsOptions @relation(name: "AdaptivSportList")
  acsDiscovery: String
  acsOrgSpecificDiscovery: String
  amplaEmail: Boolean
  hangerClinic: Boolean
  challengeMagazine: Boolean
}

type AdaptivSportsOptions {
  id: ID! @id
  private: Boolean @default(value: true)
  airRifle: Boolean @default(value: false)
  alpineSkiing: Boolean @default(value: false)
  archery: Boolean @default(value: false)
  badminton: Boolean @default(value: false)
  baseball: Boolean @default(value: false)
  beepBaseball: Boolean @default(value: false)
  biathlon: Boolean @default(value: false)
  blindHockey: Boolean @default(value: false)
  boccia: Boolean @default(value: false)
  bowling: Boolean @default(value: false)
  boxing: Boolean @default(value: false)
  canoe: Boolean @default(value: false)
  cheerleading: Boolean @default(value: false)
  crossFit: Boolean @default(value: false)
  crossCountrySkiing: Boolean @default(value: false)
  curling: Boolean @default(value: false)
  cycling: Boolean @default(value: false)
  equestrian: Boolean @default(value: false)
  esports: Boolean @default(value: false)
  fishing: Boolean @default(value: false)
  goalball: Boolean @default(value: false)
  golf: Boolean @default(value: false)
  hiking: Boolean @default(value: false)
  hunting: Boolean @default(value: false)
  judo: Boolean @default(value: false)
  juJitsu: Boolean @default(value: false)
  lacrosse: Boolean @default(value: false)
  mixedMartialArts: Boolean @default(value: false)
  motorsportsMotorcross: Boolean @default(value: false)
  mountainBiking: Boolean @default(value: false)
  powerlifting: Boolean @default(value: false)
  rafting: Boolean @default(value: false)
  rockClimbing: Boolean @default(value: false)
  rowing: Boolean @default(value: false)
  sailing: Boolean @default(value: false)
  scuba: Boolean @default(value: false)
  shooting: Boolean @default(value: false)
  skateboarding: Boolean @default(value: false)
  snowboarding: Boolean @default(value: false)
  sledHockey: Boolean @default(value: false)
  soccerBlindSoccerFiveaside: Boolean @default(value: false)
  soccerAmputeeCrutchSoccer: Boolean @default(value: false)
  soccerPowerSoccer: Boolean @default(value: false)
  soccerCPSevenaside: Boolean @default(value: false)
  standupWheelchairPaddling: Boolean @default(value: false)
  swimming: Boolean @default(value: false)
  surfing: Boolean @default(value: false)
  tableTennis: Boolean @default(value: false)
  taekwondo: Boolean @default(value: false)
  taiChi: Boolean @default(value: false)
  trackField: Boolean @default(value: false)
  triathlon: Boolean @default(value: false)
  volleyballBeachVolleyball: Boolean @default(value: false)
  volleyballSittingVolleyball: Boolean @default(value: false)
  waterSkiing: Boolean @default(value: false)
  wheelchairSkateboarding: Boolean @default(value: false)
  wheelchairBasketball: Boolean @default(value: false)
  wheelchairCurling: Boolean @default(value: false)
  wheelchairFencing: Boolean @default(value: false)
  wheelchairFootball: Boolean @default(value: false)
  wheelchairSoftball: Boolean @default(value: false)
  wheelchairRugby: Boolean @default(value: false)
  wheelchairTennis: Boolean @default(value: false)
  wrestling: Boolean @default(value: false)
  yoga: Boolean @default(value: false)
  other: Boolean @default(value: false)
}

type Event {
  id: ID! @id
  type: String!
  sportType: String!
  tags: String!
  title: String!
  host: String!
  coaches: String
  speakers: String
  date: String!
  startTime: String
  endTime: String
  location: String!
  link: String
  sponsors: String!
  imgUrl: String
  details: String
  activities: [Activity]! @relation(name: "Activities", onDelete: CASCADE)
  attendees: [Participant]! @relation(name: "Attendees")
}

type Activity {
  id: ID! @id
  name: String!
  type: String!
  sportType: String!
  date: [String]! @scalarList(strategy: RELATION)
  location: String!
  link: String
  startTime: String!
  endTime: String
  details: String
  event: Event! @relation(name: "Activities")
  participants: [Participant]! @relation(name: "Participant", onDelete: CASCADE)
  coaches: String!
}

type Participant {
  id: ID! @id
  event: Event! @relation(name: "Attendees")
  activity: Activity @relation(name: "Participant")
  profile: Profile! @relation(name: "Profile")
  role: Role! @relation(name: "Role", onDelete: CASCADE)
}

type Host {
  id: ID! @id
  profile: Profile!
}

type Coach {
  id: ID! @id
  profile: Profile!
}

type Disability {
  id: ID! @id
  private: Boolean @default(value: true)
  detailedDisabilities: DetailedDisability @relation(link: TABLE)
  ataxia: Boolean @default(value: false)
  hearingImpairment: Boolean @default(value: false)
  hypertonia: Boolean @default(value: false)
  impairedMusclePower: Boolean @default(value: false)
  impairedPassiveRange: Boolean @default(value: false)
  intellectualImpairment: Boolean @default(value: false)
  legLengthDiff: Boolean @default(value: false)
  limbDeficiency: Boolean @default(value: false)
  shortStature: Boolean @default(value: false)
  visionImpairment: Boolean @default(value: false)
  none: Boolean @default(value: false)
}

type DetailedDisability {
  id: ID! @id
  ALS: Boolean @default(value: false)
  amputation: Boolean @default(value: false)
  arthogryposis: Boolean @default(value: false)
  brachialPlexusInjury: Boolean @default(value: false)
  caudaEquinaSyndrome: Boolean @default(value: false)
  cerebralPalsy: Boolean @default(value: false)
  arthritis: Boolean @default(value: false)
  charcotMarieTooth: Boolean @default(value: false)
  dropFoot: Boolean @default(value: false)
  dwarfism: Boolean @default(value: false)
  ehlersDanlosSyndrome: Boolean @default(value: false)
  fibromyalgia: Boolean @default(value: false)
  guillainBarreSyndrome: Boolean @default(value: false)
  multipleSclerosis: Boolean @default(value: false)
  muscularDystrophy: Boolean @default(value: false)
  osteogenesisImperfecta: Boolean @default(value: false)
  osteoporosis: Boolean @default(value: false)
  parkinsons: Boolean @default(value: false)
  polio: Boolean @default(value: false)
  praderWilliSyndrome: Boolean @default(value: false)
  spinaBifida: Boolean @default(value: false)
  paraplegia: Boolean @default(value: false)
  quadraplegia: Boolean @default(value: false)
  tbi: Boolean @default(value: false)
  other: Boolean @default(value: false)
  none: Boolean @default(value: false)
}

type Chat {
  id: ID! @id
  from: Profile! @relation(name: "SentMessages")
  message: String!
  createdAt: DateTime! @createdAt
  room: ChatRoom @relation(name: "Room")
}

type ChatRoom {
  id: ID! @id
  participants: [Profile]! @relation(name: "ChatRooms")
  chats: [Chat] @relation(name: "Room", onDelete: CASCADE)
}

enum Role {
  ATHLETE
  VOLUNTEER
  COACH
  SPECTATOR
}
